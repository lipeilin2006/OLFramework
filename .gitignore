# This .gitignore file should be placed at the root of your Unity project directory
#
# Get latest from https://github.com/github/gitignore/blob/main/Unity.gitignore
#
OLFramework.Unity/[Ll]ibrary/
OLFramework.Unity/[Tt]emp/
OLFramework.Unity/[Oo]bj/
OLFramework.Unity/[Bb]uild/
OLFramework.Unity/[Bb]uilds/
OLFramework.Unity/[Ll]ogs/
OLFramework.Unity/[Uu]ser[Ss]ettings/

# MemoryCaptures can get excessive in size.
# They also could contain extremely sensitive data
OLFramework.Unity/[Mm]emoryCaptures/

# Recordings can get excessive in size
OLFramework.Unity/[Rr]ecordings/

# Uncomment this line if you wish to ignore the asset store tools plugin
# /[Aa]ssets/AssetStoreTools*

# Autogenerated Jetbrains Rider plugin
OLFramework.Unity/[Aa]ssets/Plugins/Editor/JetBrains*

# Visual Studio cache directory
OLFramework.Unity/.vs/

# Gradle cache directory
OLFramework.Unity/.gradle/

# Autogenerated VS/MD/Consulo solution and project files
OLFramework.Unity/ExportedObj/
OLFramework.Unity/.consulo/
OLFramework.Unity/*.csproj
OLFramework.Unity/*.unityproj
OLFramework.Unity/*.sln
OLFramework.Unity/*.suo
OLFramework.Unity/*.tmp
OLFramework.Unity/*.user
OLFramework.Unity/*.userprefs
OLFramework.Unity/*.pidb
OLFramework.Unity/*.booproj
OLFramework.Unity/*.svd
OLFramework.Unity/*.pdb
OLFramework.Unity/*.mdb
OLFramework.Unity/*.opendb
OLFramework.Unity/*.VC.db

# Unity3D generated meta files
OLFramework.Unity/*.pidb.meta
OLFramework.Unity/*.pdb.meta
OLFramework.Unity/*.mdb.meta

# Unity3D generated file on crash reports
OLFramework.Unity/sysinfo.txt

# Builds
OLFramework.Unity/*.apk
OLFramework.Unity/*.aab
OLFramework.Unity/*.unitypackage
OLFramework.Unity/*.app

# Crashlytics generated file
OLFramework.Unity/crashlytics-build.properties

# Packed Addressables
OLFramework.Unity/[Aa]ssets/[Aa]ddressable[Aa]ssets[Dd]ata/*/*.bin*

# Temporary auto-generated Android Assets
OLFramework.Unity/[Aa]ssets/[Ss]treamingAssets/aa.meta
OLFramework.Unity/[Aa]ssets/[Ss]treamingAssets/aa/*




## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

## MemoryPackCustom
# Build results
MemoryPackCustom/[Dd]ebug/
MemoryPackCustom/[Dd]ebugPublic/
MemoryPackCustom/[Rr]elease/
MemoryPackCustom/[Rr]eleases/
MemoryPackCustom/x64/
MemoryPackCustom/x86/
MemoryPackCustom/[Ww][Ii][Nn]32/
MemoryPackCustom/[Aa][Rr][Mm]/
MemoryPackCustom/[Aa][Rr][Mm]64/
MemoryPackCustom/bld/
MemoryPackCustom/[Bb]in/
MemoryPackCustom/[Oo]bj/
MemoryPackCustom/[Ll]og/
MemoryPackCustom/[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
MemoryPackCustom/.vs/

## OLFramework.Server
# Build results
OLFramework.Server/[Dd]ebug/
OLFramework.Server/[Dd]ebugPublic/
OLFramework.Server/[Rr]elease/
OLFramework.Server/[Rr]eleases/
OLFramework.Server/x64/
OLFramework.Server/x86/
OLFramework.Server/[Ww][Ii][Nn]32/
OLFramework.Server/[Aa][Rr][Mm]/
OLFramework.Server/[Aa][Rr][Mm]64/
OLFramework.Server/bld/
OLFramework.Server/[Bb]in/
OLFramework.Server/[Oo]bj/
OLFramework.Server/[Ll]og/
OLFramework.Server/[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
OLFramework.Server/.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Benchmark Results
OLFramework.Server/BenchmarkDotNet.Artifacts/

# .NET Core
OLFramework.Server/project.lock.json
OLFramework.Server/project.fragment.lock.json
OLFramework.Server/artifacts/


## OLFramework.Unity.Generator
# Build results
OLFramework.Generator/[Dd]ebug/
OLFramework.Generator/[Dd]ebugPublic/
OLFramework.Generator/[Rr]elease/
OLFramework.Generator/[Rr]eleases/
OLFramework.Generator/x64/
OLFramework.Generator/x86/
OLFramework.Generator/[Ww][Ii][Nn]32/
OLFramework.Generator/[Aa][Rr][Mm]/
OLFramework.Generator/[Aa][Rr][Mm]64/
OLFramework.Generator/bld/
OLFramework.Generator/[Bb]in/
OLFramework.Generator/[Oo]bj/
OLFramework.Generator/[Ll]og/
OLFramework.Generator/[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
OLFramework.Generator/.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Benchmark Results
OLFramework.Generator/BenchmarkDotNet.Artifacts/

# .NET Core
OLFramework.Generator/project.lock.json
OLFramework.Generator/project.fragment.lock.json
OLFramework.Generator/artifacts/


# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
MemoryPackCustom/$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
MemoryPackCustom/_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# TeamCity is a build add-in
MemoryPackCustom/_TeamCity*

# DotCover is a Code Coverage Tool
MemoryPackCustom/*.dotCover

# AxoCover is a Code Coverage Tool
MemoryPackCustom/.axoCover/*
MemoryPackCustom/!.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
MemoryPackCustom/coverage*.json
MemoryPackCustom/coverage*.xml
MemoryPackCustom/coverage*.info

# Visual Studio code coverage results
MemoryPackCustom/*.coverage
MemoryPackCustom/*.coveragexml

# NCrunch
MemoryPackCustom/_NCrunch_*
MemoryPackCustom/.*crunch*.local.xml
MemoryPackCustom/nCrunchTemp_*

# MightyMoose
MemoryPackCustom/*.mm.*
MemoryPackCustom/AutoTest.Net/

# Web workbench (sass)
MemoryPackCustom/.sass-cache/

# Installshield output folder
MemoryPackCustom/[Ee]xpress/

# DocProject is a documentation generator add-in
MemoryPackCustom/DocProject/buildhelp/
MemoryPackCustom/DocProject/Help/*.HxT
MemoryPackCustom/DocProject/Help/*.HxC
MemoryPackCustom/DocProject/Help/*.hhc
MemoryPackCustom/DocProject/Help/*.hhk
MemoryPackCustom/DocProject/Help/*.hhp
MemoryPackCustom/DocProject/Help/Html2
MemoryPackCustom/DocProject/Help/html

# Click-Once directory
MemoryPackCustom/publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio 6 auto-generated project file (contains which files were open etc.)
*.vbp

# Visual Studio 6 workspace and project file (working project files containing files to include in project)
*.dsw
*.dsp

# Visual Studio 6 technical files
*.ncb
*.aps

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# Visual Studio History (VSHistory) files
.vshistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/

# Fody - auto-generated XML schema
FodyWeavers.xsd

# VS Code files for those working on multiple tools
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local History for Visual Studio Code
.history/

# Windows Installer files from build outputs
*.cab
*.msi
*.msix
*.msm
*.msp

# JetBrains Rider
*.sln.iml